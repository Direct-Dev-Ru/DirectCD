apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cdddru-nfs
  namespace: test-app
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-client
  resources:
    requests:
      storage: 512Mi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: continous-deployment-ddru
  namespace: test-app
  labels:
    app: cd-ddru
    release: v1.0.11
spec:
  selector:
    matchLabels:
      app: cd-ddru
  template:
    metadata:
      labels:
        app: cd-ddru
    spec:
      containers:
        - name: dind-cddru
          image: docker:18.05-dind
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 512m
              memory: 756Mi
          volumeMounts:
            - name: dockerconfig
              mountPath: /root/.docker
              readOnly: true
            - name: dind-storage
              mountPath: /var/lib/docker
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true
            # allowPrivilegeEscalation: true

        - name: main-cdddru
          # image: docker:20.10.24-cli-alpine3.18
          # image: kuznetcovay/cdddru@sha256:c570517875a89e4f55bc8eb76dd554280a787c8aa4408a65083f58d27efd4caa
          image: kuznetcovay/cdddru:v1.0.13
          # command: ["/bin/sh", "-c", "cp /app/gitcred/id_rsa /root/.ssh/id_rsa && chmod 400 /root/.ssh/id_rsa && tail -f /dev/null"]
          # command: ["/bin/sh", "-c","sleep 3600"]
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 512m
              memory: 512Mi
          command: [
              "/bin/sh",
              "-c",
              "mkdir -p /root/.ssh;
              cp /app/gitcred/id_rsa /root/.ssh/id_rsa;              
              mkdir -p /root/.docker;
              cp /app/dockerconfig/config.json /root/.docker/;
              mkdir -p /root/.kube;
              cp /app/kubeconfig/config /root/.kube/;
              chmod 400 /root/.ssh/id_rsa /root/.kube/config /root/.docker/config.json;
              /app/cdddru -f /app/tasks/config.json -v",
            ]
          # command: [
          #     "/bin/sh",
          #     "-c",
          #     "mkdir -p /root/.ssh;
          #     cp /app/gitcred/id_rsa /root/.ssh/id_rsa;              
          #     mkdir -p /root/.docker;
          #     cp /app/dockerconfig/config.json /root/.docker/;
          #     mkdir -p /root/.kube;
          #     cp /app/kubeconfig/config /root/.kube/;
          #     chmod 400 /root/.ssh/id_rsa /root/.kube/config /root/.docker/config.json;
              
          #     while true; do sleep 30; done;",
          #   ]
          imagePullPolicy: Always
          volumeMounts:
            - name: dockerconfig
              mountPath: /app/dockerconfig
              
            - name: gitcred
              mountPath: /app/gitcred
              
            - name: kubeconfig
              mountPath: /app/kubeconfig
              
            - name: site-data
              mountPath: /app/ext-data
              subPath: main
            - name: nfs-store
              mountPath: /app/ext-nfs-store
              subPath: cdddru-tasks              
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            # allowPrivilegeEscalation: true
          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: DOCKER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: token
            - name: DOCKER_USER
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: username
            - name: DOCKER_SERVER
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: server

      nodeSelector:
        kubernetes.io/hostname: n150-netbook

      volumes:
        - name: dockerconfig
          secret:
            secretName: dockerhub-cred

        - name: kubeconfig
          secret:
            secretName: kubeconfig

        - name: gitcred
          secret:
            secretName: gitcred

        - name: dind-storage
          hostPath:
            path: /tmp/dind/storage
            type: DirectoryOrCreate

        - name: site-data
          hostPath:
            path: /mnt/k3snfs/sites
            type: DirectoryOrCreate

        - name: nfs-store
          persistentVolumeClaim:
            claimName: cdddru-nfs