FROM debian:buster-slim

ARG TARGETARCH

RUN mkdir -p /etc/apt/keyrings && \
    apt-get update && apt-get install -y curl ca-certificates git gnupg lsb-release  

RUN if [ "$TARGETARCH" = "amd64" ]; then \
    curl -LO "https://golang.org/dl/go1.21.4.linux-amd64.tar.gz" && \
    tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz && \
    rm go1.21.4.linux-amd64.tar.gz; \
    # elif [ "$TARGETARCH" = "arm64" ]; then \
    else \
    curl -LO "https://golang.org/dl/go1.21.4.linux-arm64.tar.gz" && \
    tar -C /usr/local -xzf go1.21.4.linux-arm64.tar.gz && \
    rm go1.21.4.linux-arm64.tar.gz; \
    # Add more elif statements for other architectures as needed
    fi

RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt-get update -y && apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin  && \
    rm -rf /var/lib/apt/lists/*  

# Set Go environment variables
ENV GOROOT=/usr/local/go
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH

ENTRYPOINT [ "bash" ]