# region: Volumes
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: nfs-pv-main-site
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteMany
#   persistentVolumeReclaimPolicy: Recycle
#   storageClassName: nfs
#   mountOptions:
#     - hard
#     - nfsvers=4.1
#   nfs:
#     server: ${NFS_SERVER}
#     path: /var/nfs/main-site
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: test-app
#   name: nfs-pvc-main-site
# spec:
#   storageClassName: nfs
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 3500Mi
#   volumeName: nfs-pv-main-site
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: nfs-pv-cdddru
# spec:
#   capacity:
#     storage: 5Gi
#   volumeMode: Filesystem
#   accessModes:
#     - ReadWriteMany
#   persistentVolumeReclaimPolicy: Recycle
#   storageClassName: nfs
#   mountOptions:
#     - hard
#     - nfsvers=4.1
#   nfs:
#     server: ${NFS_SERVER}
#     path: /var/nfs/cdddru
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: test-app
#   name: nfs-pvc-cdddru
# spec:
#   accessModes:
#     - ReadWriteMany
#   storageClassName: nfs
#   resources:
#     requests:
#       storage: 512Mi
#   volumeName: nfs-pv-cdddru

# # endregion

# ---

# MAIN DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdddru-02
  namespace: test-app
  labels:
    app: cdddru-02
    release: v1.0.20
spec:
  selector:
    matchLabels:
      app: cdddru-02
  template:
    metadata:
      labels:
        app: cdddru-02
    spec:
      containers:
        # docker_in_docker container
        - name: dind
          image: docker:dind
          command:
            [
              "/bin/sh",
              "-c",
              "dockerd --tls=false --insecure-registry=registry.srv.local:5000 -H tcp://0.0.0.0:2375",
            ]
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 950m
              memory: 950Mi
          volumeMounts:
            - name: dockerconfig
              mountPath: /root/.docker
              readOnly: true
            - name: dind-storage
              mountPath: /var/lib/docker
          ports:
            - containerPort: 2375
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            privileged: true

        # container with cdddru binary
        - name: cdddru
          image: kuznetcovay/cdddru:v1.0.21
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: 950m
              memory: 950Mi
          command:
            - "sh"
            - "-c"
            - |
              /bin/sh /usr/local/bin/docker-entrypoint.sh || true ;
              /app/cdddru /app/nfs-store/jobs/config-main-ddru.yaml /app/nfs-store/jobs/config-main-ddru-assets.yaml -v;

          imagePullPolicy: Always

          volumeMounts:
            - name: dockerconfig
              mountPath: /run/configs/dockerconfig

            - name: gitcred
              mountPath: /run/configs/gitcred

            - name: kubeconfig
              mountPath: /run/configs/kubeconfig

              # volume from nfs server to sync main-site data
            - name: main-site-data
              mountPath: /app/nfs-store/main-site
              subPath: main-site

              # volume from nfs server to store jobs files
            - name: nfs-pvc-cdddru
              mountPath: /app/nfs-store/jobs
              subPath: cdddru-jobs

          securityContext:
            runAsUser: 0
            runAsGroup: 0

          env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375

            - name: DOCKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: token

            - name: DOCKER_USER
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: username

            - name: DOCKER_SERVER
              valueFrom:
                secretKeyRef:
                  name: dockerhub-token
                  key: server

            - name: GIT_CRED
              valueFrom:
                secretKeyRef:
                  name: gitcred
                  key: id_rsa

            - name: KUBE_CONFIG
              valueFrom:
                secretKeyRef:
                  name: kubeconfig
                  key: config

      nodeSelector:
        kubernetes.io/hostname: opiz3-1

      volumes:
        - name: dockerconfig
          secret:
            secretName: dockerhub-cred

        - name: kubeconfig
          secret:
            secretName: kubeconfig

        - name: gitcred
          secret:
            secretName: gitcred

        - name: dind-storage
          hostPath:
            path: /tmp/dind/storage
            type: DirectoryOrCreate

        - name: main-site-data
          persistentVolumeClaim:
            claimName: nfs-pvc-main-site

        - name: nfs-pvc-cdddru
          persistentVolumeClaim:
            claimName: nfs-pvc-cdddru
# endregion
